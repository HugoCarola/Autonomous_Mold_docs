ELF Header:
  Magic:   7f 45 4c 46 01 01 01 00 00 00 00 00 00 00 00 00 
  Class:                             ELF32
  Data:                              2's complement, little endian
  Version:                           1 (current)
  OS/ABI:                            UNIX - System V
  ABI Version:                       0
  Type:                              EXEC (Executable file)
  Machine:                           ARM
  Version:                           0x1
  Entry point address:               0x71b5
  Start of program headers:          52 (bytes into file)
  Start of section headers:          4710032 (bytes into file)
  Flags:                             0x5000200, Version5 EABI, soft-float ABI
  Size of this header:               52 (bytes)
  Size of program headers:           32 (bytes)
  Number of program headers:         6
  Size of section headers:           40 (bytes)
  Number of section headers:         53
  Section header string table index: 52

Section Headers:
  [Nr] Name              Type            Addr     Off    Size   ES Flg Lk Inf Al
  [ 0]                   NULL            00000000 000000 000000 00      0   0  0
  [ 1] rom_start         PROGBITS        00000000 000100 000100 00 WAX  0   0  4
  [ 2] text              PROGBITS        00000100 000200 0265d8 00  AX  0   0 64
  [ 3] .ARM.exidx        ARM_EXIDX       000266d8 0267d8 000008 00  AL  2   0  4
  [ 4] initlevel         PROGBITS        000266e0 0267e0 000098 00   A  0   0  4
  [ 5] device_area       PROGBITS        00026778 026878 00008c 00   A  0   0  4
  [ 6] sw_isr_table      PROGBITS        00026804 026904 000180 00  WA  0   0  4
  [ 7] entropy_driv[...] PROGBITS        00026984 026a84 000008 00   A  0   0  4
  [ 8] gpio_driver_[...] PROGBITS        0002698c 026a8c 000024 00   A  0   0  4
  [ 9] spi_driver_a[...] PROGBITS        000269b0 026ab0 000008 00   A  0   0  4
  [10] clock_contro[...] PROGBITS        000269b8 026ab8 00001c 00   A  0   0  4
  [11] uart_driver_[...] PROGBITS        000269d4 026ad4 000044 00   A  0   0  4
  [12] net_socket_r[...] PROGBITS        00026a18 026b18 000010 00   A  0   0  4
  [13] net_socket_s[...] PROGBITS        00026a28 026b28 00000c 00   A  0   0  4
  [14] log_const_area    PROGBITS        00026a34 026b34 000140 00   A  0   0  4
  [15] log_backend_area  PROGBITS        00026b74 026c74 000020 00   A  0   0  4
  [16] shell_area        PROGBITS        00026b94 026c94 000030 00   A  0   0  4
  [17] shell_root_c[...] PROGBITS        00026bc4 026cc4 00002c 00   A  0   0  4
  [18] shell_subcmd[...] PROGBITS        00026bf0 026cf0 000348 00   A  0   0  4
  [19] shell_dynami[...] PROGBITS        00026f38 027038 000008 00   A  0   0  4
  [20] rodata            PROGBITS        00026f40 027040 007330 00   A  0   0 16
  [21] _RTT_SECTION_NAME NOBITS          20000000 02fcc0 0004b8 00  WA  0   0  4
  [22] .ramfunc          NOBITS          200004b8 02e370 000008 00  WA  0   0  1
  [23] datas             PROGBITS        200004c0 02e380 001490 00  WA  0   0 64
  [24] device_states     PROGBITS        20001950 02f810 00000e 00  WA  0   0  1
  [25] log_mpsc_pbu[...] PROGBITS        20001960 02f820 000040 00  WA  0   0  4
  [26] log_msg_ptr_area  PROGBITS        200019a0 02f860 000004 00  WA  0   0  4
  [27] log_dynamic_area  PROGBITS        200019a4 02f864 0000a0 00  WA  0   0  4
  [28] k_mem_slab_area   PROGBITS        20001a44 02f904 000054 00  WA  0   0  4
  [29] k_mutex_area      PROGBITS        20001a98 02f958 0000dc 00  WA  0   0  4
  [30] k_msgq_area       PROGBITS        20001b74 02fa34 000030 00  WA  0   0  4
  [31] k_sem_area        PROGBITS        20001ba4 02fa64 000060 00  WA  0   0  4
  [32] k_condvar_area    PROGBITS        20001c04 02fac4 000008 00  WA  0   0  4
  [33] net_buf_pool_area PROGBITS        20001c0c 02facc 0000dc 00  WA  0   0  4
  [34] net_if_area       PROGBITS        20001ce8 02fba8 0000e8 00  WA  0   0  4
  [35] net_if_dev_area   PROGBITS        20001dd0 02fc90 00001c 00  WA  0   0  4
  [36] net_l2_area       PROGBITS        20001dec 02fcac 000010 00   A  0   0  4
  [37] bss               NOBITS          20001e00 02fcc0 001fb5 00  WA  0   0  8
  [38] noinit            NOBITS          20003dc0 02fcc0 005d38 00  WA  0   0 64
  [39] .comment          PROGBITS        00000000 02fcc0 000020 01  MS  0   0  1
  [40] .debug_aranges    PROGBITS        00000000 02fce0 004608 00      0   0  8
  [41] .debug_info       PROGBITS        00000000 0342e8 29324d 00      0   0  1
  [42] .debug_abbrev     PROGBITS        00000000 2c7535 02fda7 00      0   0  1
  [43] .debug_line       PROGBITS        00000000 2f72dc 085e73 00      0   0  1
  [44] .debug_frame      PROGBITS        00000000 37d150 00c704 00      0   0  4
  [45] .debug_str        PROGBITS        00000000 389854 01f55a 01  MS  0   0  1
  [46] .debug_loc        PROGBITS        00000000 3a8dae 095d2a 00      0   0  1
  [47] .debug_ranges     PROGBITS        00000000 43ead8 016078 00      0   0  8
  [48] .ARM.attributes   ARM_ATTRIBUTES  00000000 454b50 00002e 00      0   0  1
  [49] .last_section     PROGBITS        0002fbb4 02fcbc 000004 00   A  0   0  1
  [50] .symtab           SYMTAB          00000000 454b80 018c00 10     51 4290  4
  [51] .strtab           STRTAB          00000000 46d780 010420 00      0   0  1
  [52] .shstrtab         STRTAB          00000000 47dba0 0002f0 00      0   0  1
Key to Flags:
  W (write), A (alloc), X (execute), M (merge), S (strings), I (info),
  L (link order), O (extra OS processing required), G (group), T (TLS),
  C (compressed), x (unknown), o (OS specific), E (exclude),
  D (mbind), y (purecode), p (processor specific)

Program Headers:
  Type           Offset   VirtAddr   PhysAddr   FileSiz MemSiz  Flg Align
  EXIDX          0x0267d8 0x000266d8 0x000266d8 0x00008 0x00008 R   0x4
  LOAD           0x000100 0x00000000 0x00000000 0x2e270 0x2e270 RWE 0x40
  LOAD           0x000000 0x200004b8 0x0002e270 0x00000 0x00008 RW  0x1
  LOAD           0x02e380 0x200004c0 0x0002e278 0x0193c 0x0193c RW  0x40
  LOAD           0x02fcbc 0x0002fbb4 0x0002fbb4 0x00004 0x00004 R   0x1
  LOAD           0x000000 0x20000000 0x20000000 0x00000 0x09af8 RW  0x40

 Section to Segment mapping:
  Segment Sections...
   00     .ARM.exidx 
   01     rom_start text .ARM.exidx initlevel device_area sw_isr_table entropy_driver_api_area gpio_driver_api_area spi_driver_api_area clock_control_driver_api_area uart_driver_api_area net_socket_register_area net_socket_service_desc_area log_const_area log_backend_area shell_area shell_root_cmds_area shell_subcmds_area shell_dynamic_subcmds_area rodata 
   02     .ramfunc 
   03     datas device_states log_mpsc_pbuf_area log_msg_ptr_area log_dynamic_area k_mem_slab_area k_mutex_area k_msgq_area k_sem_area k_condvar_area net_buf_pool_area net_if_area net_if_dev_area net_l2_area 
   04     .last_section 
   05     _RTT_SECTION_NAME .ramfunc bss noinit 
